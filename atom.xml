<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Vishwa's Blogs]]></title>
  <link href="http://vbp2610.github.io/atom.xml" rel="self"/>
  <link href="http://vbp2610.github.io/"/>
  <updated>2014-07-25T08:27:57+05:30</updated>
  <id>http://vbp2610.github.io/</id>
  <author>
    <name><![CDATA[Vbp]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Node Debug Tools]]></title>
    <link href="http://vbp2610.github.io/blog/2014/07/25/node-debug-tools/"/>
    <updated>2014-07-25T06:13:21+05:30</updated>
    <id>http://vbp2610.github.io/blog/2014/07/25/node-debug-tools</id>
    <content type="html"><![CDATA[<p> It should come as no surprise that Node has emerged as the technology of choice for creating web Application in recent years. <a href="http://w3techs.com/technologies/details/ws-nodejs/all/all">Recent trend</a> show it. As I always passionate to analysis different emerging technologies, I stared Node few months back and impressed the power of node in certain circumstances.</p>

<p>I analysis multiple node debug tool like sublime text, Eclipse, Node-Inspector, Bracket and decided to use Node-Inspector. I started look into documentation on web for understanding of Architecture/Design but
Unfortunately it was missing from the Web…. As Developer Code is our destination for diving. Thanks God Node-Inspector, Chrome Web-Inspector, Remote debugging Protocol and V8 Debug Protocol are part of open community.</p>

<p>It’s huge code base and as usual little bit difficult to figure out the flow of code in event driven paradigm but I had my lovable “grep command” to do that. In starting it seems to me basic Messaging between client/Server but in actual it was more that that and pretty interesting so I decided to share my understanding in my own way to make it very simple.</p>

<p>Just listing out different technologies used to build complete product</p>

<ol>
<li>HTTP Client/Server</li>
<li>Web Socket Client/Server</li>
<li>TCP Client/Server</li>
<li><a href="https://www.webkit.org/blog/1875/announcing-remote-debugging-protocol-v1-0/">WebKit Remote Debugging Protocol[WRDP]</a></li>
<li><a href="https://code.google.com/p/v8/wiki/DebuggerProtocol">V8 Remote Debugging protocol[V8RDP]</a></li>
</ol>


<p>there is two main components WebKit Web-Inspector work as Client of WRDP and V8 Debugger work as Server for V8 since Client and Server know different protocols so no way to talk each other Directly. See Diagram1</p>

<p><img src="http://vbp2610.github.io/assets/node-debug-tools/diagram1.png"></img></p>

<p>It pretty clear from above diagram we need one proxy who know both protocols and mapping of commands. For example “SetBreakPoint” both components can understand but with different parameter in JSON message. Who will changes the format of message ?  it’s Node-Inspector only who is playing the role of proxy in between both of them. See Diagram2
<img src="http://vbp2610.github.io/assets/node-debug-tools/diagram2.png"></img></p>

<p>See in above diagram that Node debugger is running TCP server but Web Inspector is working as Web Socket Client.. Ouch! What it’s means and how it will impact?</p>

<p>Since Client is sending message on using WebSocket but node debugger is running TCP server, we have to run WebSocket Server and TCP client inside Proxy to pass the message with a Protocol Convertor show in the diagram3
<img src="http://vbp2610.github.io/assets/node-debug-tools/diagram3.svg"></img></p>

<p>Now question came in mind what is the need of HTTP Client/Server? Browser is HTTP client who is fetching Web-Inspector From HTTP server running on node-Inspector Proxy Module.</p>

<p>Web Inspector form the request using WRDP and pass it to Websocket Server running on Proxy( node-inspector). WebSocket server running inside proxy and hand over the message to protocol convertor for reformat it. Protocol Convertor convert message into V8RDP and Pass it to TCP client. TCP Client send the message to V8 debugger working as TCP server. V8 execute the request and send the response to TCP Client. TCP client pass the message to Websocket client using protocol convertor and websocket Server.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eval Scope Chain and Execution Context]]></title>
    <link href="http://vbp2610.github.io/blog/2014/07/20/title/"/>
    <updated>2014-07-20T12:32:54+05:30</updated>
    <id>http://vbp2610.github.io/blog/2014/07/20/title</id>
    <content type="html"><![CDATA[<p>Eval is inbuilt function to execute string as javascript in run time via directly access of javascript interpreter. There are multiple articles on the web to explain execution context of the eval. In essence, Eval use scope chain of calling function to execute. In this article, I am trying to explain it using very simple diagram and example. First I explain function scope chain and correlated it with how use calling function scope chain during execution.</p>

<h6>How function scope chain work?</h6>

<p><img src="http://vbp2610.github.io/images/eval/diagram1.jpg"></img>
In above diagram there are three context 1. Global Scope chain 2. Outer Scope chain 3. Inner Scope chain. Javascript try to find out the variable from inner scope chain to Global scope chain always. Let&rsquo;s go step by step to analysis output of the program</p>

<h6>Statement console.log(a) output</h6>

<p>Interpreter start search this variable in inner scope chain, since this present in inner scope that&rsquo;s why output isinner</p>

<h6>Statement console.log(b) output</h6>

<p>Interpreter start search this variable in inner scope chain, since this variable is not present in inner scope try to find it in outer scope chain. since this present in outer scope that&rsquo;s why output is outer.</p>

<h6>Statement console.log&copy; output</h6>

<p>interpreter doesn&rsquo;t find this variable in inner and outer scope chain that&rsquo;s why look into global scope chain. since this present in global scope that&rsquo;s why output is global</p>

<p>Now it&rsquo;s important to understand what will be the output if the same output statement will be passed to eval function as shown in below diagram. which scope chained will be used by eval function</p>

<p><img src="http://vbp2610.github.io/images/eval/diagram1.jpg"></img></p>

<p>Wow! Surprise! still output is same whereas we are using eval to print the output. that means eval used the same scope chain which is used by the function from which eval function is called.
in essence, Eval use the scope chain of the function from which it&rsquo;s called. in addition to that it&rsquo;s execute in window context until unless you are not using call and apply function of javascript.</p>
]]></content>
  </entry>
  
</feed>
